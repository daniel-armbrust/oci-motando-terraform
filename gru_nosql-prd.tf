#
# gru_nosql-prd.tf
#

#---------------------------
# PRODUCTION
#---------------------------

#-------------------
# Table: usuario
#-------------------
module "gru_table_motando_usuario" {
    source = "./modules/nosql/table"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = module.cmp_motando-nosql.id

    nosql_table = {
        name = "motando_usuario",
        on_demand_capacity = true,
        storage_gbs = "1",
        ddl_statement = <<EOS
           CREATE TABLE IF NOT EXISTS motando_usuario (
                id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),                
                email STRING,
                email_confirmado BOOLEAN NOT NULL DEFAULT FALSE,
                nome STRING,
                senha STRING,                
                admin BOOLEAN NOT NULL DEFAULT FALSE,
                lojista BOOLEAN NOT NULL DEFAULT FALSE,
                perfil_img_url STRING DEFAULT '',
                banner_img_url STRING DEFAULT '',
                telefone JSON,                
                cidade STRING,                
                estado STRING,                
                estado_sigla STRING,
                cep STRING DEFAULT '',
                endereco STRING DEFAULT '',
                bairro STRING DEFAULT '',
                complemento STRING DEFAULT '',
                anuncio_id ARRAY(INTEGER),
                data_cadastro TIMESTAMP(0),
                data_modificacao TIMESTAMP(0),
	       PRIMARY KEY(id))
        EOS
    }
}

#-------------------
# Table: anuncio
#-------------------
module "gru_table_motando_anuncio" {
    source = "./modules/nosql/table"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = module.cmp_motando-nosql.id

    nosql_table = {
        name = "motando_anuncio",
        on_demand_capacity = true,
        storage_gbs = "1",
        ddl_statement = <<EOS
           CREATE TABLE IF NOT EXISTS motando_anuncio ( 
                id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),   
                email STRING,  
                moto_marca STRING,   
                moto_modelo STRING,   
                ano_fabricacao INTEGER,
                ano_modelo INTEGER,
                placa STRING,   
                km INTEGER,
                zero_km BOOLEAN DEFAULT FALSE,
                cor STRING,
                preco NUMBER NOT NULL DEFAULT 0,
                frase_vendedora STRING,
                descricao STRING,
                opcional_alarme BOOLEAN DEFAULT FALSE,
                opcional_bau BOOLEAN DEFAULT FALSE,
                opcional_computador BOOLEAN DEFAULT FALSE,
                opcional_gps BOOLEAN DEFAULT FALSE,
                aceita_contraoferta BOOLEAN,
                aceita_troca BOOLEAN,
                doc_ok BOOLEAN,
                sinistro BOOLEAN,
                trilha_pista BOOLEAN,
                freios STRING,
                tipo_partida STRING,
                refrigeracao STRING,
                estilo STRING,
                origem STRING,
                img_lista ARRAY(STRING),
                data_cadastro TIMESTAMP(0), 
                data_modificacao TIMESTAMP(0),
           PRIMARY KEY(id))
        EOS
    }
}

#-------------------
# Table: sessao
#-------------------
module "gru_table_motando_sessao" {
    source = "./modules/nosql/table"
   
    providers = {
       oci = oci.gru
    }

    compartment_id = module.cmp_motando-nosql.id

    nosql_table = {
        name = "motando_sessao",
        on_demand_capacity = true,
        storage_gbs = "1",
        ddl_statement = <<EOS
           CREATE TABLE IF NOT EXISTS motando_sessao (
                id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
                session_token STRING,
                jwt_token STRING NOT NULL DEFAULT '',
                digital_sign STRING,
                email STRING,
	       PRIMARY KEY(id)) USING TTL 1 hours
        EOS
    }
}